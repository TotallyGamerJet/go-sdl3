package ttf

import sdl "github.com/Zyko0/go-sdl3/sdl"

// Code generated by cmd/ffi2go. DO NOT EDIT.

var (
	// TTF_Version => This function gets the version of the dynamically linked SDL_ttf library.
	//
	//puregogen:library path:windows=ttf.dll path:unix=ttf.so alias=ttf
	//puregogen:function symbol=TTF_Version
	iVersion func() int32

	// TTF_GetFreeTypeVersion => Query the version of the FreeType library in use.
	//
	//puregogen:function symbol=TTF_GetFreeTypeVersion
	iGetFreeTypeVersion func(major *int32, minor *int32, patch *int32)

	// TTF_GetHarfBuzzVersion => Query the version of the HarfBuzz library in use.
	//
	//puregogen:function symbol=TTF_GetHarfBuzzVersion
	iGetHarfBuzzVersion func(major *int32, minor *int32, patch *int32)

	// TTF_Init => Initialize SDL_ttf.
	//
	//puregogen:function symbol=TTF_Init
	iInit func() bool

	// TTF_OpenFont => Create a font from a file, using a specified point size.
	//
	//puregogen:function symbol=TTF_OpenFont
	iOpenFont func(file string, ptsize float32) *Font

	// TTF_OpenFontIO => Create a font from an SDL_IOStream, using a specified point size.
	//
	//puregogen:function symbol=TTF_OpenFontIO
	iOpenFontIO func(src *sdl.IOStream, closeio bool, ptsize float32) *Font

	// TTF_OpenFontWithProperties => Create a font with the specified properties.
	//
	//puregogen:function symbol=TTF_OpenFontWithProperties
	iOpenFontWithProperties func(props sdl.PropertiesID) *Font

	// TTF_CopyFont => Create a copy of an existing font.
	//
	//puregogen:function symbol=TTF_CopyFont
	iCopyFont func(existing_font *Font) *Font

	// TTF_GetFontProperties => Get the properties associated with a font.
	//
	//puregogen:function symbol=TTF_GetFontProperties
	iGetFontProperties func(font *Font) sdl.PropertiesID

	// TTF_GetFontGeneration => Get the font generation.
	//
	//puregogen:function symbol=TTF_GetFontGeneration
	iGetFontGeneration func(font *Font) uint32

	// TTF_AddFallbackFont => Add a fallback font.
	//
	//puregogen:function symbol=TTF_AddFallbackFont
	iAddFallbackFont func(font *Font, fallback *Font) bool

	// TTF_RemoveFallbackFont => Remove a fallback font.
	//
	//puregogen:function symbol=TTF_RemoveFallbackFont
	iRemoveFallbackFont func(font *Font, fallback *Font)

	// TTF_ClearFallbackFonts => Remove all fallback fonts.
	//
	//puregogen:function symbol=TTF_ClearFallbackFonts
	iClearFallbackFonts func(font *Font)

	// TTF_SetFontSize => Set a font's size dynamically.
	//
	//puregogen:function symbol=TTF_SetFontSize
	iSetFontSize func(font *Font, ptsize float32) bool

	// TTF_SetFontSizeDPI => Set font size dynamically with target resolutions, in dots per inch.
	//
	//puregogen:function symbol=TTF_SetFontSizeDPI
	iSetFontSizeDPI func(font *Font, ptsize float32, hdpi int32, vdpi int32) bool

	// TTF_GetFontSize => Get the size of a font.
	//
	//puregogen:function symbol=TTF_GetFontSize
	iGetFontSize func(font *Font) float32

	// TTF_GetFontDPI => Get font target resolutions, in dots per inch.
	//
	//puregogen:function symbol=TTF_GetFontDPI
	iGetFontDPI func(font *Font, hdpi *int32, vdpi *int32) bool

	// TTF_SetFontStyle => Set a font's current style.
	//
	//puregogen:function symbol=TTF_SetFontStyle
	iSetFontStyle func(font *Font, style FontStyleFlags)

	// TTF_GetFontStyle => Query a font's current style.
	//
	//puregogen:function symbol=TTF_GetFontStyle
	iGetFontStyle func(font *Font) FontStyleFlags

	// TTF_SetFontOutline => Set a font's current outline.
	//
	//puregogen:function symbol=TTF_SetFontOutline
	iSetFontOutline func(font *Font, outline int32) bool

	// TTF_GetFontOutline => Query a font's current outline.
	//
	//puregogen:function symbol=TTF_GetFontOutline
	iGetFontOutline func(font *Font) int32

	// TTF_SetFontHinting => Set a font's current hinter setting.
	//
	//puregogen:function symbol=TTF_SetFontHinting
	iSetFontHinting func(font *Font, hinting HintingFlags)

	// TTF_GetNumFontFaces => Query the number of faces of a font.
	//
	//puregogen:function symbol=TTF_GetNumFontFaces
	iGetNumFontFaces func(font *Font) int32

	// TTF_GetFontHinting => Query a font's current FreeType hinter setting.
	//
	//puregogen:function symbol=TTF_GetFontHinting
	iGetFontHinting func(font *Font) HintingFlags

	// TTF_SetFontSDF => Enable Signed Distance Field rendering for a font.
	//
	//puregogen:function symbol=TTF_SetFontSDF
	iSetFontSDF func(font *Font, enabled bool) bool

	// TTF_GetFontSDF => Query whether Signed Distance Field rendering is enabled for a font.
	//
	//puregogen:function symbol=TTF_GetFontSDF
	iGetFontSDF func(font *Font) bool

	// TTF_SetFontWrapAlignment => Set a font's current wrap alignment option.
	//
	//puregogen:function symbol=TTF_SetFontWrapAlignment
	iSetFontWrapAlignment func(font *Font, align HorizontalAlignment)

	// TTF_GetFontWrapAlignment => Query a font's current wrap alignment option.
	//
	//puregogen:function symbol=TTF_GetFontWrapAlignment
	iGetFontWrapAlignment func(font *Font) HorizontalAlignment

	// TTF_GetFontHeight => Query the total height of a font.
	//
	//puregogen:function symbol=TTF_GetFontHeight
	iGetFontHeight func(font *Font) int32

	// TTF_GetFontAscent => Query the offset from the baseline to the top of a font.
	//
	//puregogen:function symbol=TTF_GetFontAscent
	iGetFontAscent func(font *Font) int32

	// TTF_GetFontDescent => Query the offset from the baseline to the bottom of a font.
	//
	//puregogen:function symbol=TTF_GetFontDescent
	iGetFontDescent func(font *Font) int32

	// TTF_SetFontLineSkip => Set the spacing between lines of text for a font.
	//
	//puregogen:function symbol=TTF_SetFontLineSkip
	iSetFontLineSkip func(font *Font, lineskip int32)

	// TTF_GetFontLineSkip => Query the spacing between lines of text for a font.
	//
	//puregogen:function symbol=TTF_GetFontLineSkip
	iGetFontLineSkip func(font *Font) int32

	// TTF_SetFontKerning => Set if kerning is enabled for a font.
	//
	//puregogen:function symbol=TTF_SetFontKerning
	iSetFontKerning func(font *Font, enabled bool)

	// TTF_GetFontKerning => Query whether or not kerning is enabled for a font.
	//
	//puregogen:function symbol=TTF_GetFontKerning
	iGetFontKerning func(font *Font) bool

	// TTF_FontIsFixedWidth => Query whether a font is fixed-width.
	//
	//puregogen:function symbol=TTF_FontIsFixedWidth
	iFontIsFixedWidth func(font *Font) bool

	// TTF_FontIsScalable => Query whether a font is scalable or not.
	//
	//puregogen:function symbol=TTF_FontIsScalable
	iFontIsScalable func(font *Font) bool

	// TTF_GetFontFamilyName => Query a font's family name.
	//
	//puregogen:function symbol=TTF_GetFontFamilyName
	iGetFontFamilyName func(font *Font) string

	// TTF_GetFontStyleName => Query a font's style name.
	//
	//puregogen:function symbol=TTF_GetFontStyleName
	iGetFontStyleName func(font *Font) string

	// TTF_SetFontDirection => Set the direction to be used for text shaping by a font.
	//
	//puregogen:function symbol=TTF_SetFontDirection
	iSetFontDirection func(font *Font, direction Direction) bool

	// TTF_GetFontDirection => Get the direction to be used for text shaping by a font.
	//
	//puregogen:function symbol=TTF_GetFontDirection
	iGetFontDirection func(font *Font) Direction

	// TTF_StringToTag => Convert from a 4 character string to a 32-bit tag.
	//
	//puregogen:function symbol=TTF_StringToTag
	iStringToTag func(string string) uint32

	// TTF_SetFontScript => Set the script to be used for text shaping by a font.
	//
	//puregogen:function symbol=TTF_SetFontScript
	iSetFontScript func(font *Font, script uint32) bool

	// TTF_GetFontScript => Get the script used for text shaping a font.
	//
	//puregogen:function symbol=TTF_GetFontScript
	iGetFontScript func(font *Font) uint32

	// TTF_GetGlyphScript => Get the script used by a 32-bit codepoint.
	//
	//puregogen:function symbol=TTF_GetGlyphScript
	iGetGlyphScript func(ch uint32) uint32

	// TTF_SetFontLanguage => Set language to be used for text shaping by a font.
	//
	//puregogen:function symbol=TTF_SetFontLanguage
	iSetFontLanguage func(font *Font, language_bcp47 string) bool

	// TTF_FontHasGlyph => Check whether a glyph is provided by the font for a UNICODE codepoint.
	//
	//puregogen:function symbol=TTF_FontHasGlyph
	iFontHasGlyph func(font *Font, ch uint32) bool

	// TTF_GetGlyphImage => Get the pixel image for a UNICODE codepoint.
	//
	//puregogen:function symbol=TTF_GetGlyphImage
	iGetGlyphImage func(font *Font, ch uint32, image_type *ImageType) *sdl.Surface

	// TTF_GetGlyphImageForIndex => Get the pixel image for a character index.
	//
	//puregogen:function symbol=TTF_GetGlyphImageForIndex
	iGetGlyphImageForIndex func(font *Font, glyph_index uint32, image_type *ImageType) *sdl.Surface

	// TTF_GetGlyphMetrics => Query the metrics (dimensions) of a font's glyph for a UNICODE codepoint.
	//
	//puregogen:function symbol=TTF_GetGlyphMetrics
	iGetGlyphMetrics func(font *Font, ch uint32, minx *int32, maxx *int32, miny *int32, maxy *int32, advance *int32) bool

	// TTF_GetGlyphKerning => Query the kerning size between the glyphs of two UNICODE codepoints.
	//
	//puregogen:function symbol=TTF_GetGlyphKerning
	iGetGlyphKerning func(font *Font, previous_ch uint32, ch uint32, kerning *int32) bool

	// TTF_GetStringSize => Calculate the dimensions of a rendered string of UTF-8 text.
	//
	//puregogen:function symbol=TTF_GetStringSize
	iGetStringSize func(font *Font, text string, length uintptr, w *int32, h *int32) bool

	// TTF_GetStringSizeWrapped => Calculate the dimensions of a rendered string of UTF-8 text.
	//
	//puregogen:function symbol=TTF_GetStringSizeWrapped
	iGetStringSizeWrapped func(font *Font, text string, length uintptr, wrap_width int32, w *int32, h *int32) bool

	// TTF_MeasureString => Calculate how much of a UTF-8 string will fit in a given width.
	//
	//puregogen:function symbol=TTF_MeasureString
	iMeasureString func(font *Font, text string, length uintptr, max_width int32, measured_width *int32, measured_length *uintptr) bool

	// TTF_CreateSurfaceTextEngine => Create a text engine for drawing text on SDL surfaces.
	//
	//puregogen:function symbol=TTF_CreateSurfaceTextEngine
	iCreateSurfaceTextEngine func() *TextEngine

	// TTF_DrawSurfaceText => Draw text to an SDL surface.
	//
	//puregogen:function symbol=TTF_DrawSurfaceText
	iDrawSurfaceText func(text *Text, x int32, y int32, surface *sdl.Surface) bool

	// TTF_DestroySurfaceTextEngine => Destroy a text engine created for drawing text on SDL surfaces.
	//
	//puregogen:function symbol=TTF_DestroySurfaceTextEngine
	iDestroySurfaceTextEngine func(engine *TextEngine)

	// TTF_CreateRendererTextEngine => Create a text engine for drawing text on an SDL renderer.
	//
	//puregogen:function symbol=TTF_CreateRendererTextEngine
	iCreateRendererTextEngine func(renderer *sdl.Renderer) *TextEngine

	// TTF_CreateRendererTextEngineWithProperties => Create a text engine for drawing text on an SDL renderer, with the specified properties.
	//
	//puregogen:function symbol=TTF_CreateRendererTextEngineWithProperties
	iCreateRendererTextEngineWithProperties func(props sdl.PropertiesID) *TextEngine

	// TTF_DrawRendererText => Draw text to an SDL renderer.
	//
	//puregogen:function symbol=TTF_DrawRendererText
	iDrawRendererText func(text *Text, x float32, y float32) bool

	// TTF_DestroyRendererTextEngine => Destroy a text engine created for drawing text on an SDL renderer.
	//
	//puregogen:function symbol=TTF_DestroyRendererTextEngine
	iDestroyRendererTextEngine func(engine *TextEngine)

	// TTF_CreateGPUTextEngine => Create a text engine for drawing text with the SDL GPU API.
	//
	//puregogen:function symbol=TTF_CreateGPUTextEngine
	iCreateGPUTextEngine func(device *sdl.GPUDevice) *TextEngine

	// TTF_CreateGPUTextEngineWithProperties => Create a text engine for drawing text with the SDL GPU API, with the specified properties.
	//
	//puregogen:function symbol=TTF_CreateGPUTextEngineWithProperties
	iCreateGPUTextEngineWithProperties func(props sdl.PropertiesID) *TextEngine

	// TTF_GetGPUTextDrawData => Get the geometry data needed for drawing the text.
	//
	//puregogen:function symbol=TTF_GetGPUTextDrawData
	iGetGPUTextDrawData func(text *Text) *GPUAtlasDrawSequence

	// TTF_DestroyGPUTextEngine => Destroy a text engine created for drawing text with the SDL GPU API.
	//
	//puregogen:function symbol=TTF_DestroyGPUTextEngine
	iDestroyGPUTextEngine func(engine *TextEngine)

	// TTF_SetGPUTextEngineWinding => Sets the winding order of the vertices returned by TTF_GetGPUTextDrawData for a particular GPU text engine.
	//
	//puregogen:function symbol=TTF_SetGPUTextEngineWinding
	iSetGPUTextEngineWinding func(engine *TextEngine, winding GPUTextEngineWinding)

	// TTF_GetGPUTextEngineWinding => Get the winding order of the vertices returned by TTF_GetGPUTextDrawData for a particular GPU text engine
	//
	//puregogen:function symbol=TTF_GetGPUTextEngineWinding
	iGetGPUTextEngineWinding func(engine *TextEngine) GPUTextEngineWinding

	// TTF_CreateText => Create a text object from UTF-8 text and a text engine.
	//
	//puregogen:function symbol=TTF_CreateText
	iCreateText func(engine *TextEngine, font *Font, text string, length uintptr) *Text

	// TTF_GetTextProperties => Get the properties associated with a text object.
	//
	//puregogen:function symbol=TTF_GetTextProperties
	iGetTextProperties func(text *Text) sdl.PropertiesID

	// TTF_SetTextEngine => Set the text engine used by a text object.
	//
	//puregogen:function symbol=TTF_SetTextEngine
	iSetTextEngine func(text *Text, engine *TextEngine) bool

	// TTF_GetTextEngine => Get the text engine used by a text object.
	//
	//puregogen:function symbol=TTF_GetTextEngine
	iGetTextEngine func(text *Text) *TextEngine

	// TTF_SetTextFont => Set the font used by a text object.
	//
	//puregogen:function symbol=TTF_SetTextFont
	iSetTextFont func(text *Text, font *Font) bool

	// TTF_GetTextFont => Get the font used by a text object.
	//
	//puregogen:function symbol=TTF_GetTextFont
	iGetTextFont func(text *Text) *Font

	// TTF_SetTextDirection => Set the direction to be used for text shaping a text object.
	//
	//puregogen:function symbol=TTF_SetTextDirection
	iSetTextDirection func(text *Text, direction Direction) bool

	// TTF_GetTextDirection => Get the direction to be used for text shaping a text object.
	//
	//puregogen:function symbol=TTF_GetTextDirection
	iGetTextDirection func(text *Text) Direction

	// TTF_SetTextScript => Set the script to be used for text shaping a text object.
	//
	//puregogen:function symbol=TTF_SetTextScript
	iSetTextScript func(text *Text, script uint32) bool

	// TTF_GetTextScript => Get the script used for text shaping a text object.
	//
	//puregogen:function symbol=TTF_GetTextScript
	iGetTextScript func(text *Text) uint32

	// TTF_SetTextColor => Set the color of a text object.
	//
	//puregogen:function symbol=TTF_SetTextColor
	iSetTextColor func(text *Text, r uint8, g uint8, b uint8, a uint8) bool

	// TTF_SetTextColorFloat => Set the color of a text object.
	//
	//puregogen:function symbol=TTF_SetTextColorFloat
	iSetTextColorFloat func(text *Text, r float32, g float32, b float32, a float32) bool

	// TTF_GetTextColor => Get the color of a text object.
	//
	//puregogen:function symbol=TTF_GetTextColor
	iGetTextColor func(text *Text, r *uint8, g *uint8, b *uint8, a *uint8) bool

	// TTF_GetTextColorFloat => Get the color of a text object.
	//
	//puregogen:function symbol=TTF_GetTextColorFloat
	iGetTextColorFloat func(text *Text, r *float32, g *float32, b *float32, a *float32) bool

	// TTF_SetTextPosition => Set the position of a text object.
	//
	//puregogen:function symbol=TTF_SetTextPosition
	iSetTextPosition func(text *Text, x int32, y int32) bool

	// TTF_GetTextPosition => Get the position of a text object.
	//
	//puregogen:function symbol=TTF_GetTextPosition
	iGetTextPosition func(text *Text, x *int32, y *int32) bool

	// TTF_SetTextWrapWidth => Set whether wrapping is enabled on a text object.
	//
	//puregogen:function symbol=TTF_SetTextWrapWidth
	iSetTextWrapWidth func(text *Text, wrap_width int32) bool

	// TTF_GetTextWrapWidth => Get whether wrapping is enabled on a text object.
	//
	//puregogen:function symbol=TTF_GetTextWrapWidth
	iGetTextWrapWidth func(text *Text, wrap_width *int32) bool

	// TTF_SetTextWrapWhitespaceVisible => Set whether whitespace should be visible when wrapping a text object.
	//
	//puregogen:function symbol=TTF_SetTextWrapWhitespaceVisible
	iSetTextWrapWhitespaceVisible func(text *Text, visible bool) bool

	// TTF_TextWrapWhitespaceVisible => Return whether whitespace is shown when wrapping a text object.
	//
	//puregogen:function symbol=TTF_TextWrapWhitespaceVisible
	iTextWrapWhitespaceVisible func(text *Text) bool

	// TTF_SetTextString => Set the UTF-8 text used by a text object.
	//
	//puregogen:function symbol=TTF_SetTextString
	iSetTextString func(text *Text, string string, length uintptr) bool

	// TTF_InsertTextString => Insert UTF-8 text into a text object.
	//
	//puregogen:function symbol=TTF_InsertTextString
	iInsertTextString func(text *Text, offset int32, string string, length uintptr) bool

	// TTF_AppendTextString => Append UTF-8 text to a text object.
	//
	//puregogen:function symbol=TTF_AppendTextString
	iAppendTextString func(text *Text, string string, length uintptr) bool

	// TTF_DeleteTextString => Delete UTF-8 text from a text object.
	//
	//puregogen:function symbol=TTF_DeleteTextString
	iDeleteTextString func(text *Text, offset int32, length int32) bool

	// TTF_GetTextSize => Get the size of a text object.
	//
	//puregogen:function symbol=TTF_GetTextSize
	iGetTextSize func(text *Text, w *int32, h *int32) bool

	// TTF_GetTextSubString => Get the substring of a text object that surrounds a text offset.
	//
	//puregogen:function symbol=TTF_GetTextSubString
	iGetTextSubString func(text *Text, offset int32, substring *SubString) bool

	// TTF_GetTextSubStringForLine => Get the substring of a text object that contains the given line.
	//
	//puregogen:function symbol=TTF_GetTextSubStringForLine
	iGetTextSubStringForLine func(text *Text, line int32, substring *SubString) bool

	// TTF_GetTextSubStringsForRange => Get the substrings of a text object that contain a range of text.
	//
	//puregogen:function symbol=TTF_GetTextSubStringsForRange
	iGetTextSubStringsForRange func(text *Text, offset int32, length int32, count *int32) **SubString

	// TTF_GetTextSubStringForPoint => Get the portion of a text string that is closest to a point.
	//
	//puregogen:function symbol=TTF_GetTextSubStringForPoint
	iGetTextSubStringForPoint func(text *Text, x int32, y int32, substring *SubString) bool

	// TTF_GetPreviousTextSubString => Get the previous substring in a text object
	//
	//puregogen:function symbol=TTF_GetPreviousTextSubString
	iGetPreviousTextSubString func(text *Text, substring *SubString, previous *SubString) bool

	// TTF_GetNextTextSubString => Get the next substring in a text object
	//
	//puregogen:function symbol=TTF_GetNextTextSubString
	iGetNextTextSubString func(text *Text, substring *SubString, next *SubString) bool

	// TTF_UpdateText => Update the layout of a text object.
	//
	//puregogen:function symbol=TTF_UpdateText
	iUpdateText func(text *Text) bool

	// TTF_DestroyText => Destroy a text object created by a text engine.
	//
	//puregogen:function symbol=TTF_DestroyText
	iDestroyText func(text *Text)

	// TTF_CloseFont => Dispose of a previously-created font.
	//
	//puregogen:function symbol=TTF_CloseFont
	iCloseFont func(font *Font)

	// TTF_Quit => Deinitialize SDL_ttf.
	//
	//puregogen:function symbol=TTF_Quit
	iQuit func()

	// TTF_WasInit => Check if SDL_ttf is initialized.
	//
	//puregogen:function symbol=TTF_WasInit
	iWasInit func() int32
)
